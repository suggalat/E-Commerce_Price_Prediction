{"version":3,"sources":["logo.svg","dashboard/card/row.js","dashboard/card/cardHeader.js","dashboard/card/Card.js","dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["RowsGrid","props","growth","style","current_price","expected","color","ImgMediaCard","change","CardHeader","avatar","fontSize","subheader","title","useStyles","makeStyles","root","maxWidth","classes","Card","className","Change","CardActionArea","CardMedia","component","alt","image","Image","CardContent","Typography","gutterBottom","variant","name","textAlign","width","price","per","CardActions","href","link","target","Button","data","require","theme","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","inputInput","paddingLeft","transition","transitions","create","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","mode","grey","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","giveField","string","fields","i","Object","keys","length","toLowerCase","includes","push","Grid","item","md","Dashboard","useState","field","setField","React","open","setOpen","toggleDrawer","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","InputBase","placeholder","onChange","event","value","inputRoot","input","inputProps","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","inset","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1da92147.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import * as React from \"react\";\n\nexport default function RowsGrid(props) {\n  if (props.growth < 0){\n    return (\n      <div style={{}}>\n        <b>Current Price</b> : {props.current_price}\n        <br />\n        <b>Expected Price</b> : {props.expected}(<span style={{color: \"Red\"}}>{props.growth}%</span>)<br />\n      </div>\n    );\n  }\n  else {\n    return (\n      <div style={{}}>\n        <b>Current Price</b> : {props.current_price}\n        <br />\n        <b>Expected Price</b> : {props.expected}(<span style={{color: \"Green\"}}>{props.growth}%</span>)<br />\n      </div>\n    );\n  }\n}\n  ","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Row from \"./row\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nexport default function ImgMediaCard(props) {\n  if (props.change >= 0) {\n    return (\n      <CardHeader\n        avatar={<ThumbUpIcon style={{ color: \"Green\", fontSize: 50  }} />}\n        subheader=\"Price is Expected to Rise\"\n        title=\"Buy Now\"\n      />\n    );\n  } else {\n    return (\n      <CardHeader\n        avatar={<PanToolIcon style={{ color: \"Red\", fontSize: 50   }} />}\n        subheader=\"Price is Expected to Drop\"\n        title=\"Wait\"\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Row from \"./row\";\nimport Header from \"./cardHeader\";\nimport { Link, Route } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  }\n});\n\nexport default function ImgMediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <Header change={props.Change} />\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Laptop\"\n          image={props.Image}\n          title=\"Laptop\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h7\" component=\"h8\">\n            {props.name}\n          </Typography>\n          <div style={{textAlign: \"left\", width: \"150%\"}}>\n          <Row \n            current_price={props.price}\n            expected={props.expected}\n            growth={props.per}\n          />\n          </div>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <a href={props.link} target=\"_blank\">\n          <Button variant=\"contained\" color=\"primary\" component=\"span\">\n            <b>view Now</b>\n          </Button>\n        </a>\n      </CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Card from \"./card/Card\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles\";\n\nlet data = require(\"../data/Top_Picks_Flipkart.json\");\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[100]\n        : theme.palette.grey[900],\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction giveField(data, string) {\n  const fields = [];\n  for (let i = 0; i < Object.keys(data[\"Name\"]).length; i++) {\n    var mainString = data[\"Name\"][i].toLowerCase();\n    if (mainString.includes(string.toLowerCase())) {\n      fields.push(\n        <Grid item md={3}>\n          <Card\n            name={data[\"Name\"][i]}\n            price={data[\"Price\"][i]}\n            expected={data[\"Forecast\"][i]}\n            Change={data[\"Change\"][i]}\n            per={data[\"Change in %\"][i]}\n            Image={data[\"Image\"][i]}\n            link={data[\"Link\"][i]}\n          />\n        </Grid>\n      );\n    }\n  }\n  return fields;\n}\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [field, setField] = useState(giveField(data,\"\"));\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Laptop Price Predictor\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              onChange={(event) => {\n                setField(giveField(data,event.target.value))\n              }}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <div>\n            <ListItem\n              button\n              onClick={() => {\n                data = require(\"../data/Top_Picks_Flipkart.json\");\n                setField(giveField(data,\"\"))\n              }}\n            >\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </div>\n        </List>\n        <Divider />\n        <List>\n          <div>\n            <ListSubheader inset>E-commerce Platforms</ListSubheader>\n            <ListItem\n              button\n              onClick={() => {\n                data = require(\"../data/Flipkart_Forecast.json\");\n                setField(giveField(data,\"\"))\n              }}\n            >\n              <ListItemIcon>\n                <ShoppingCartIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Flipkart\" />\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => {\n                data = require(\"../data/Amazon_Forecast.json\");\n                setField(giveField(data,\"\"))\n              }}\n            >\n              <ListItemIcon>\n                <LocalMallIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Amazon\" />\n            </ListItem>\n          </div>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={4}>\n            {field}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport './dashboard/Dashboard'\nimport Dashboard from './dashboard/Dashboard';\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}